import { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom";
import { ArrowLeft, Save, RefreshCw } from "lucide-react";
import { motion, AnimatePresence } from "framer-motion";

const defaultServices = [
  "ูุต ุดุนุฑ",
  "ุชุฏุฑูุฌ ุฏูู",
  "ุญูุงูุฉ ุฏูู",
  "ุตุจุบุฉ",
  "ุงุณุชุดูุงุฑ",
  "ูููู",
  "ุฃูุฑู",
  "ุญูุงู ูุบุฑุจู",
  "ุชูุธูู ุจุดุฑุฉ ุจุงูุจุฎุงุฑ",
  "ุชูุธูู ุจุดุฑุฉ - ูง ูุฑุงุญู",
  "ุจุงุฏูููุฑ ุฑุฌุงูู",
  "VIP",
  "ุญูุงู ูุฑูู",
  "ูุงุณู",
  "ูุฑุฏ ุจูุชููุณ",
  "ุจุฑูุชูู ูุนุงูุฌ",
  "ุญูุงู ุฒูุช",
  "ุฌูุณุฉ ุชูุธูู ูุดุฑุฉ",
  "ูุณุงุฌ ุณููุช",
  "ูุณุงุฌ ูุงุฑุฏ",
  "ููุทุฉ ุณุฎูุฉ",
  "ูููุงุฉ",
  "ูุต ุฃุทูุงู",
  "ุดูุน (Wax)",
  "ูุชูุฉ",
  "ุนุฑูุณ VIP",
  "ุนุฑูุณ ุจุฑููููู",
  "ุดุงูุฑ",
];

const Settings = () => {
  const [services, setServices] = useState([]);
  const [isSaving, setIsSaving] = useState(false);
  const [isResetting, setIsResetting] = useState(false);
  const navigate = useNavigate();

  useEffect(() => {
    const stored = localStorage.getItem("services");

    if (stored) {
      setServices(JSON.parse(stored));
    } else {
      const initialServices = defaultServices.map((name) => ({
        name,
        price: 0,
      }));
      setServices(initialServices);
    }
  }, []);

  const handlePriceChange = (index, newPrice) => {
    const updated = [...services];
    updated[index].price = parseFloat(newPrice) || 0;
    setServices(updated);
  };

  const handleSave = () => {
    setIsSaving(true);
    localStorage.setItem("services", JSON.stringify(services));

    setTimeout(() => {
      setIsSaving(false);
      navigate("/");
    }, 1500);
  };

  const handleResetCounts = () => {
    setIsResetting(true);
    localStorage.removeItem("orderCounts");

    setTimeout(() => {
      setIsResetting(false);
    }, 1500);
  };

  return (
    <motion.div
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      className="min-h-screen bg-gradient-to-br from-gray-50 to-blue-50 p-4 md:p-8"
    >
      <div className="max-w-4xl mx-auto">
        <motion.div
          initial={{ y: -20 }}
          animate={{ y: 0 }}
          className="flex flex-col items-center mb-8"
        >
          <motion.h2
            whileHover={{ scale: 1.01 }}
            className="text-3xl font-bold text-center mb-2 bg-gradient-to-r from-blue-600 to-blue-800 bg-clip-text text-transparent"
          >
            โ๏ธ ุฅุนุฏุงุฏุงุช ุงููุธุงู
          </motion.h2>
          <p className="text-gray-600">ุชุนุฏูู ุฃุณุนุงุฑ ุงูุฎุฏูุงุช ูุฅุนุฏุงุฏุงุช ุฃุฎุฑู</p>
        </motion.div>

        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.1 }}
          className="bg-white rounded-2xl shadow-lg overflow-hidden mb-8"
        >
          <div className="p-4 border-b border-gray-200 bg-gradient-to-r from-blue-50 to-white">
            <h3 className="text-xl font-semibold text-blue-800">
              ๐ฐ ุฃุณุนุงุฑ ุงูุฎุฏูุงุช
            </h3>
          </div>

          <div className="overflow-x-auto">
            <table className="table w-full">
              <thead className="bg-gray-100">
                <tr>
                  <th className="text-right font-semibold text-gray-700">
                    ุงูุฎุฏูุฉ
                  </th>
                  <th className="text-center font-semibold text-gray-700">
                    ุงูุณุนุฑ (ุฌููู)
                  </th>
                </tr>
              </thead>
              <tbody>
                {services.map((service, index) => (
                  <motion.tr
                    key={service.name}
                    initial={{ opacity: 0, x: -10 }}
                    animate={{ opacity: 1, x: 0 }}
                    transition={{ delay: index * 0.03 }}
                    className="hover:bg-gray-50 border-b border-gray-100"
                  >
                    <td className="py-3 font-medium text-gray-800">
                      {service.name}
                    </td>
                    <td className="py-3">
                      <div className="relative w-32 mx-auto">
                        <input
                          type="number"
                          min="0"
                          step="5"
                          className="w-full px-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition text-center"
                          value={service.price}
                          onChange={(e) =>
                            handlePriceChange(index, e.target.value)
                          }
                        />
                        <span className="absolute left-3 top-1/2 -translate-y-1/2 text-gray-500">
                          ุฌ
                        </span>
                      </div>
                    </td>
                  </motion.tr>
                ))}
              </tbody>
            </table>
          </div>
        </motion.div>

        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.2 }}
          className="bg-white rounded-2xl shadow-lg overflow-hidden mb-8"
        >
          <div className="p-4 border-b border-gray-200 bg-gradient-to-r from-amber-50 to-white">
            <h3 className="text-xl font-semibold text-amber-800">
              ๐ ุฅุนุฏุงุฏุงุช ุฃุฎุฑู
            </h3>
          </div>

          <div className="p-4">
            <div className="flex flex-col sm:flex-row justify-between items-center gap-4">
              <div>
                <h4 className="font-medium text-gray-700 mb-1">
                  ุชุตููุฑ ุนุฏุงุฏ ุงูุทูุจุงุช
                </h4>
                <p className="text-sm text-gray-500">
                  ุฅุนุงุฏุฉ ุชุนููู ุนุฏุฏ ุงูุทูุจุงุช ููู ูุฑุณู
                </p>
              </div>

              <motion.button
                whileHover={{ scale: 1.03 }}
                whileTap={{ scale: 0.97 }}
                onClick={handleResetCounts}
                disabled={isResetting}
                className={`px-6 py-2 rounded-lg font-medium flex items-center gap-2 ${
                  isResetting
                    ? "bg-gray-200 text-gray-500"
                    : "bg-amber-100 hover:bg-amber-200 text-amber-800"
                }`}
              >
                {isResetting ? (
                  <RefreshCw size={18} className="animate-spin" />
                ) : (
                  <RefreshCw size={18} />
                )}
                {isResetting ? "ุฌุงุฑู ุงูุชุตููุฑ..." : "ุชุตููุฑ ุงูุนุฏุงุฏ"}
              </motion.button>
            </div>
          </div>
        </motion.div>

        <motion.div
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 0.3 }}
          className="flex flex-col sm:flex-row gap-4"
        >
          <motion.button
            whileHover={{ scale: 1.03 }}
            whileTap={{ scale: 0.97 }}
            onClick={() => navigate("/")}
            className="flex-1 flex items-center justify-center gap-2 px-6 py-3 bg-gray-100 hover:bg-gray-200 text-gray-800 rounded-lg font-medium transition"
          >
            <ArrowLeft size={18} />
            ุงูุฑุฌูุน ููุฑุฆูุณูุฉ
          </motion.button>

          <motion.button
            whileHover={{ scale: 1.03 }}
            whileTap={{ scale: 0.97 }}
            onClick={handleSave}
            disabled={isSaving}
            className={`flex-1 flex items-center justify-center gap-2 px-6 py-3 rounded-lg font-medium transition ${
              isSaving
                ? "bg-gray-300 text-gray-500"
                : "bg-gradient-to-r from-green-500 to-green-600 hover:from-green-600 hover:to-green-700 text-white"
            }`}
          >
            {isSaving ? (
              <>
                <RefreshCw size={18} className="animate-spin" />
                ุฌุงุฑู ุงูุญูุธ...
              </>
            ) : (
              <>
                <Save size={18} />
                ุญูุธ ุงูุชุบููุฑุงุช
              </>
            )}
          </motion.button>
        </motion.div>
      </div>

      <AnimatePresence>
        {(isSaving || isResetting) && (
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            className="fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm flex items-center justify-center z-50"
          >
            <motion.div
              initial={{ scale: 0.9 }}
              animate={{ scale: 1 }}
              exit={{ scale: 0.9 }}
              className="bg-white rounded-2xl p-6 text-center max-w-sm"
            >
              <RefreshCw
                size={32}
                className="mx-auto mb-4 animate-spin text-blue-600"
              />
              <h3 className="text-xl font-bold mb-2">
                {isSaving ? "ุฌุงุฑู ุญูุธ ุงูุชุบููุฑุงุช..." : "ุฌุงุฑู ุชุตููุฑ ุงูุนุฏุงุฏ..."}
              </h3>
              <p className="text-gray-600">ุจุฑุฌุงุก ุงูุงูุชุธุงุฑ...</p>
            </motion.div>
          </motion.div>
        )}
      </AnimatePresence>
    </motion.div>
  );
};

export default Settings;
